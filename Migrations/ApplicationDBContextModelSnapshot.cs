// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentGateway21052021.Data;

namespace PaymentGateway21052021.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CanCreate");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.Property<int?>("RoleID");

                    b.Property<int?>("UserID");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.HasIndex("UserID");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("Token");

                    b.Property<DateTime>("TokenExpiration");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<int>("UserID");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAccountLookup", b =>
                {
                    b.Property<int>("lookupID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountId");

                    b.Property<string>("AccountName");

                    b.Property<string>("AccountNumber");

                    b.Property<string>("BVN");

                    b.Property<string>("BankCode");

                    b.Property<string>("BankName");

                    b.Property<string>("ClientId");

                    b.HasKey("lookupID");

                    b.ToTable("EGS_AccountLookup");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAccountManagers", b =>
                {
                    b.Property<int>("accountManagerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateDeleted");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<string>("stateID");

                    b.HasKey("accountManagerID");

                    b.ToTable("EGS_AccountManagers");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAccountType", b =>
                {
                    b.Property<int>("AccountTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountTypeName");

                    b.Property<int?>("CreatedByUserID");

                    b.Property<DateTime>("DateCreated");

                    b.HasKey("AccountTypeID");

                    b.HasIndex("CreatedByUserID");

                    b.ToTable("EGS_AccountType");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAccountsInfo", b =>
                {
                    b.Property<int>("AccountsInfoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<int?>("BankID");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int?>("UserID");

                    b.HasKey("AccountsInfoID");

                    b.HasIndex("BankID");

                    b.HasIndex("UserID");

                    b.ToTable("EGS_AccountInfo");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAgentCommission", b =>
                {
                    b.Property<int>("AgentCommissionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentID");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("ProductID");

                    b.Property<int>("ProductItemID");

                    b.Property<int>("SettlementIntervalID");

                    b.Property<int>("SettlementTypeID");

                    b.Property<int>("SplittingRate");

                    b.HasKey("AgentCommissionID");

                    b.ToTable("EGS_AgentCommission");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAggregateSum", b =>
                {
                    b.Property<int>("AggregateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AggregatedAmount");

                    b.Property<DateTime>("DateModified");

                    b.HasKey("AggregateID");

                    b.ToTable("EGS_AggregateSum");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAggregatorCommission", b =>
                {
                    b.Property<int>("AggregatorCommissionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AggregatorID");

                    b.Property<double>("CommissionAmount");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DatePushed");

                    b.Property<bool>("IsPushed");

                    b.Property<int>("ProductID");

                    b.Property<int>("ProductItemID");

                    b.Property<int>("SettlementIntervalID");

                    b.Property<int>("SettlementTypeID");

                    b.Property<int>("SplittingRate");

                    b.Property<string>("TransactionReferenceNo");

                    b.HasKey("AggregatorCommissionID");

                    b.ToTable("EGS_AggregatorCommission");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAggregatorRequest", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AggregatorID");

                    b.Property<int>("ApprovedBy");

                    b.Property<int>("ApprovedBy2");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateApproved");

                    b.Property<DateTime>("DateApprovedBy2");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateRejected");

                    b.Property<DateTime>("DateRejectedBy2");

                    b.Property<bool>("IsProcessed");

                    b.Property<int>("RejectedBy");

                    b.Property<int>("RejectedBy2");

                    b.Property<int?>("UserID");

                    b.HasKey("RequestID");

                    b.HasIndex("AggregatorID");

                    b.HasIndex("UserID");

                    b.ToTable("EGS_AggregatorRequest");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAssignAgentTerminal", b =>
                {
                    b.Property<int>("AssignTerminalID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentID");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsActive");

                    b.Property<string>("MainWallet");

                    b.Property<string>("Status");

                    b.Property<int>("SubWalletID");

                    b.Property<int>("TerminalKey");

                    b.HasKey("AssignTerminalID");

                    b.ToTable("EGS_AssignAgentTerminal");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAuditTrail", b =>
                {
                    b.Property<int>("AID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DbAction");

                    b.Property<string>("Description");

                    b.Property<string>("DeviceName");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Menu");

                    b.Property<string>("Page");

                    b.Property<string>("Role");

                    b.HasKey("AID");

                    b.ToTable("EGS_AuditTrail");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAuthFactor", b =>
                {
                    b.Property<int>("AuthFactorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthType");

                    b.Property<string>("AuthValue");

                    b.HasKey("AuthFactorID");

                    b.ToTable("EGS_AuthFactor");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsBankBvns", b =>
                {
                    b.Property<int>("bankbvnsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("bvn");

                    b.Property<string>("bvndetails");

                    b.HasKey("bankbvnsID");

                    b.ToTable("EGS_BankBvns");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsBeneficiary", b =>
                {
                    b.Property<int>("BeneficaryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankClient");

                    b.Property<string>("BankCode");

                    b.Property<int?>("BankID");

                    b.Property<string>("BankName");

                    b.Property<string>("BeneficiaryBankAccount");

                    b.Property<string>("BeneficiaryName");

                    b.Property<DateTime>("Datecreated");

                    b.Property<int>("WalletId");

                    b.Property<int>("userId");

                    b.HasKey("BeneficaryID");

                    b.HasIndex("BankID");

                    b.ToTable("EGS_Beneficiary");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsBettingProviders", b =>
                {
                    b.Property<int>("bettingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<double>("charge");

                    b.Property<string>("chargeType");

                    b.Property<string>("customerName");

                    b.Property<string>("vendor");

                    b.HasKey("bettingID");

                    b.ToTable("EGS_BettingProviders");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsBettingUsers", b =>
                {
                    b.Property<int>("bettingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("customerID");

                    b.Property<string>("response");

                    b.Property<string>("service");

                    b.HasKey("bettingID");

                    b.ToTable("EGS_BettingUsers");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsCabletvusers", b =>
                {
                    b.Property<int>("CableID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("response");

                    b.Property<string>("service");

                    b.Property<string>("smartcard");

                    b.HasKey("CableID");

                    b.ToTable("EGS_cabletvusers");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsCardHolder", b =>
                {
                    b.Property<int>("CardholderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVV");

                    b.Property<string>("CardHolderName");

                    b.Property<string>("CardNumber");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("EXP");

                    b.Property<string>("PAN");

                    b.Property<string>("Pin");

                    b.Property<int?>("WalletID");

                    b.HasKey("CardholderID");

                    b.HasIndex("WalletID");

                    b.ToTable("EGS_CardHolder");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsChannels", b =>
                {
                    b.Property<int>("ChannelID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Channel");

                    b.Property<int>("EnumChannelID");

                    b.Property<int>("cap");

                    b.Property<int>("chargeIsFlat");

                    b.Property<double>("chargeValue");

                    b.Property<double>("lowerTransactionBound");

                    b.Property<int>("priority");

                    b.Property<string>("secretKey");

                    b.Property<int>("status");

                    b.Property<double>("upperTransactionBound");

                    b.HasKey("ChannelID");

                    b.ToTable("EGS_Channels");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsClient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientID");

                    b.Property<string>("ClientSecret");

                    b.Property<string>("CompanyName");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Email");

                    b.Property<bool>("Expiration");

                    b.Property<string>("IPAddress");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Token");

                    b.Property<string>("WalletCredentials");

                    b.Property<int>("WalletID");

                    b.HasKey("ID");

                    b.ToTable("EGS_Client");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsDisbursement", b =>
                {
                    b.Property<int>("DisbursementID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<double>("Amount");

                    b.Property<string>("Approver");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("Recipient");

                    b.Property<string>("ReferenceNumber");

                    b.Property<string>("status");

                    b.HasKey("DisbursementID");

                    b.ToTable("EGS_Disbursement");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsDocumentValue", b =>
                {
                    b.Property<int>("DocumentValueID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DocPath");

                    b.Property<int?>("DocumentID");

                    b.Property<int?>("UserKYCID");

                    b.HasKey("DocumentValueID");

                    b.HasIndex("DocumentID");

                    b.HasIndex("UserKYCID");

                    b.ToTable("EGS_DocumentValue");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsEgoleWalletTransactions", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BankID");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Narration");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ReceiverAccount");

                    b.Property<string>("ReceiverBank");

                    b.Property<string>("ReceiverName");

                    b.Property<string>("SessionID");

                    b.Property<string>("Status");

                    b.Property<int?>("TransactionMethodID");

                    b.Property<int?>("TransactionTypeID");

                    b.Property<double>("TransferAmount");

                    b.Property<int?>("UserID");

                    b.Property<int?>("WalletID");

                    b.Property<int?>("WalletTransactionID");

                    b.HasKey("TransactionID");

                    b.HasIndex("BankID");

                    b.HasIndex("TransactionMethodID");

                    b.HasIndex("TransactionTypeID");

                    b.HasIndex("UserID");

                    b.HasIndex("WalletID");

                    b.HasIndex("WalletTransactionID");

                    b.ToTable("EGS_EgoleWalletTransactions");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsEnergymeterusers", b =>
                {
                    b.Property<int>("energymeterID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("disco");

                    b.Property<string>("meternumber");

                    b.Property<string>("response");

                    b.Property<string>("type");

                    b.HasKey("energymeterID");

                    b.ToTable("EGS_Energymeterusers");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsGLAccount", b =>
                {
                    b.Property<int>("GLAccountID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccount");

                    b.Property<int?>("BankID");

                    b.Property<int?>("CompanyID");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("GLAccountCode");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsInUse");

                    b.HasKey("GLAccountID");

                    b.HasIndex("BankID");

                    b.HasIndex("CompanyID");

                    b.ToTable("EGS_GLAccounts");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsInsuranceRemittance", b =>
                {
                    b.Property<int>("InsuranceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountAlias");

                    b.Property<string>("AccountNumber");

                    b.Property<double>("BROKER");

                    b.Property<string>("BankCode");

                    b.Property<double>("CBS");

                    b.Property<string>("CompanyName");

                    b.Property<int>("CreatedBy");

                    b.Property<double>("ECOWAS");

                    b.Property<double>("EGOLEPAY");

                    b.Property<double>("INSURER");

                    b.Property<bool>("IsSettled");

                    b.Property<bool>("IsTransferred");

                    b.Property<double>("LAGOS");

                    b.Property<double>("NIA");

                    b.Property<double>("NIAMEMBER");

                    b.Property<string>("PolicyNumber");

                    b.Property<double>("Premuim");

                    b.Property<string>("ProductCategory");

                    b.Property<string>("ProductItem");

                    b.Property<string>("ProductName");

                    b.Property<string>("ReceivingBank");

                    b.Property<string>("RegNumber");

                    b.Property<DateTime>("SettlementDate");

                    b.Property<DateTime>("TransactionDate");

                    b.Property<string>("TransactionReference");

                    b.Property<DateTime>("TransferDate");

                    b.HasKey("InsuranceID");

                    b.ToTable("EGS_InsuranceRemittance");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsInvoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AggregatorPushed");

                    b.Property<string>("AlternateReferenceNo");

                    b.Property<double>("Amount");

                    b.Property<int?>("BankID");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("CustomerAlternateRef");

                    b.Property<string>("CustomerEmail");

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsAggregatorSettled");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<string>("PaymentReference")
                        .HasMaxLength(150);

                    b.Property<bool>("PaymentStatus");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("ProductID");

                    b.Property<int>("ProductItemID");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(150);

                    b.Property<string>("RegistrationNo");

                    b.Property<string>("ServiceNumber");

                    b.Property<double>("SurCharge");

                    b.Property<string>("TerminalID");

                    b.HasKey("InvoiceID");

                    b.HasIndex("BankID");

                    b.HasIndex("ProductID");

                    b.ToTable("EGS_Invoice");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsInvoiceMode", b =>
                {
                    b.Property<int>("InvoiceModeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InvoiceModeType");

                    b.HasKey("InvoiceModeID");

                    b.ToTable("EGS_InvoiceMode");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsIswpricebands", b =>
                {
                    b.Property<int>("IswpriceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("band");

                    b.Property<string>("charge");

                    b.Property<string>("max");

                    b.Property<string>("min");

                    b.Property<string>("stampduty");

                    b.HasKey("IswpriceID");

                    b.ToTable("EGS_Iswpricebands");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsMerchant", b =>
                {
                    b.Property<int>("MerchantID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo");

                    b.Property<string>("Address");

                    b.Property<int?>("BankID");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("KYC");

                    b.Property<string>("MerchantCode");

                    b.Property<int>("MerchantType");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("MerchantID");

                    b.HasIndex("BankID");

                    b.ToTable("EGS_Merchant");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsMerchantType", b =>
                {
                    b.Property<int>("MerchantTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("MerchantType");

                    b.HasKey("MerchantTypeID");

                    b.ToTable("EGS_MerchantType");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsParentTerminal", b =>
                {
                    b.Property<int>("ParentTerminalKey")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("ParentTerminalID");

                    b.Property<string>("Provider");

                    b.Property<bool>("Status");

                    b.HasKey("ParentTerminalKey");

                    b.ToTable("EgsParentTerminal");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsPeriodicAgents", b =>
                {
                    b.Property<int>("AgentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentName");

                    b.Property<string>("Period");

                    b.Property<string>("WalletAccountNumber");

                    b.HasKey("AgentID");

                    b.ToTable("EGS_PeriodicAgents");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsPeriodicTransactionReport", b =>
                {
                    b.Property<int>("TransID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentName");

                    b.Property<double>("Amount");

                    b.Property<int>("Itemcount");

                    b.Property<DateTime>("TransactionDate");

                    b.Property<string>("WalletAccountNumber");

                    b.HasKey("TransID");

                    b.ToTable("EGS_PeriodicTransactionReport");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsPinpads", b =>
                {
                    b.Property<int>("pinpadsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<double>("amount");

                    b.Property<string>("cardExpiry");

                    b.Property<string>("cardScheme");

                    b.Property<string>("cardhash");

                    b.Property<string>("currency");

                    b.Property<string>("customerName");

                    b.Property<string>("lat");

                    b.Property<string>("lng");

                    b.Property<string>("pan");

                    b.Property<DateTime>("paymentDate");

                    b.Property<string>("reference");

                    b.Property<string>("rrn");

                    b.Property<string>("stan");

                    b.Property<string>("statusCode");

                    b.Property<string>("statusDescription");

                    b.Property<string>("terminalID");

                    b.Property<string>("type");

                    b.HasKey("pinpadsID");

                    b.ToTable("EGS_Pinpads");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsPosRequest", b =>
                {
                    b.Property<int>("PosrequestID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("Approvedby");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateApproved");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateRejected");

                    b.Property<string>("Devicetype");

                    b.Property<bool>("IsApproved");

                    b.Property<bool>("IsProccessed");

                    b.Property<string>("MainWalletAccount");

                    b.Property<int?>("PosTypeID");

                    b.Property<int>("RejectedBy");

                    b.Property<string>("Status");

                    b.Property<int>("UserID");

                    b.HasKey("PosrequestID");

                    b.HasIndex("PosTypeID");

                    b.ToTable("EgsPosRequest");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsPosType", b =>
                {
                    b.Property<int>("PosTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsAvailaible");

                    b.Property<string>("PosType");

                    b.HasKey("PosTypeID");

                    b.ToTable("EgsPosType");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsProduct", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("APIKey");

                    b.Property<string>("ActionResult");

                    b.Property<string>("ActionUrl");

                    b.Property<string>("AuthenticationResult");

                    b.Property<string>("AuthenticationUrl");

                    b.Property<double>("CommisionAmount");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<double>("DiscountedAmount");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Image");

                    b.Property<int>("InvoiceModeID");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsFixedAmount");

                    b.Property<int?>("MerchantID");

                    b.Property<string>("Notification");

                    b.Property<string>("NotificationIndicator");

                    b.Property<int?>("ProductCategoryID");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductDescription");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProductParameter");

                    b.Property<string>("Verification");

                    b.Property<string>("VerificationIndicator");

                    b.HasKey("ProductID");

                    b.HasIndex("MerchantID");

                    b.HasIndex("ProductCategoryID");

                    b.ToTable("EGS_Products");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("FormCategoryType");

                    b.Property<string>("Image");

                    b.Property<bool>("IsActive");

                    b.Property<string>("MobileIcon");

                    b.Property<string>("ProductCategoryCode");

                    b.Property<string>("ProductCategoryName");

                    b.Property<string>("URL");

                    b.HasKey("ProductCategoryID");

                    b.ToTable("EGS_ProductCategories");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsProductItem", b =>
                {
                    b.Property<int>("ProductItemID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CommisionAmount");

                    b.Property<int>("CostRecovery");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<double>("DiscountedAmount");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("Istransactionfee");

                    b.Property<int?>("ProductID");

                    b.Property<string>("ProductItemCategory");

                    b.Property<string>("ProductItemCode");

                    b.Property<string>("ProductItemName");

                    b.Property<int?>("UserID");

                    b.HasKey("ProductItemID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("EGS_ProductItem");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsProductItemRate", b =>
                {
                    b.Property<int>("ProductItemRateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmountRate");

                    b.Property<int?>("CreatedByUserID");

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsActive");

                    b.Property<int?>("ProductItemID");

                    b.HasKey("ProductItemRateID");

                    b.HasIndex("CreatedByUserID");

                    b.HasIndex("ProductItemID");

                    b.ToTable("EGS_ProductItemRate");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSales", b =>
                {
                    b.Property<int>("SalesID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CommisionAmount");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<double>("DiscountedAmount");

                    b.Property<string>("IPAddress");

                    b.Property<bool>("IsSettled");

                    b.Property<int?>("ProductID");

                    b.Property<int?>("ProductItemID");

                    b.Property<string>("SalesReferenceNumber");

                    b.Property<DateTime>("SettlementDate");

                    b.Property<string>("TransactionReferenceNumber");

                    b.Property<int?>("WalletTransactionID");

                    b.HasKey("SalesID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductItemID");

                    b.ToTable("EGS_Sales");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsServiceType", b =>
                {
                    b.Property<int>("ServiceTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("ServiceType");

                    b.HasKey("ServiceTypeID");

                    b.ToTable("EGS_ServiceType");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSettlementBasis", b =>
                {
                    b.Property<int>("SettlementBasisID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("MerchantID");

                    b.Property<int>("ProductID");

                    b.Property<int>("ProductItemID");

                    b.Property<int>("SettlementIntervalID");

                    b.Property<int>("SettlementTypeID");

                    b.Property<int>("SplittingRate");

                    b.HasKey("SettlementBasisID");

                    b.ToTable("EGS_SettlementBasis");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSettlementHistory", b =>
                {
                    b.Property<int>("SettlementHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<double>("SettlementAmount");

                    b.HasKey("SettlementHistoryID");

                    b.ToTable("EGS_SettlementHistory");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSettlementInterval", b =>
                {
                    b.Property<int>("SettlementIntervalID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("SettlementIntervalName");

                    b.HasKey("SettlementIntervalID");

                    b.ToTable("EGS_SettlementInterval");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSettlementLog", b =>
                {
                    b.Property<int>("SettlementLogID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int?>("BankID");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DatePaid");

                    b.Property<bool>("IsPaid");

                    b.Property<string>("MerchantAccountNo");

                    b.Property<int?>("MerchantID");

                    b.Property<int?>("ProductID");

                    b.Property<int?>("ProductItemID");

                    b.Property<int>("SalesID");

                    b.Property<int>("SettlementIntervalID");

                    b.Property<int?>("SettlementModeID");

                    b.Property<int?>("SettlementTypeID");

                    b.Property<double>("Totalcollection");

                    b.HasKey("SettlementLogID");

                    b.HasIndex("BankID");

                    b.HasIndex("MerchantID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductItemID");

                    b.HasIndex("SettlementModeID");

                    b.HasIndex("SettlementTypeID");

                    b.ToTable("EGS_SettlementLog");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSettlementMode", b =>
                {
                    b.Property<int>("SettlementModeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("SettlementModeName");

                    b.HasKey("SettlementModeID");

                    b.ToTable("EGS_SettlementMode");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSettlementSummary", b =>
                {
                    b.Property<int>("SettlementSummaryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo");

                    b.Property<double>("AmountSettled");

                    b.Property<int?>("BankID");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DatePaid");

                    b.Property<bool>("IsPaid");

                    b.Property<int?>("MerchantID");

                    b.Property<string>("Narration");

                    b.Property<int?>("ProductID");

                    b.Property<string>("SettlementReference");

                    b.Property<double>("TotalCollection");

                    b.HasKey("SettlementSummaryID");

                    b.HasIndex("BankID");

                    b.HasIndex("MerchantID");

                    b.HasIndex("ProductID");

                    b.ToTable("EGS_SettlementSummary");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSettlementType", b =>
                {
                    b.Property<int>("SettlementTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("SettlementType");

                    b.HasKey("SettlementTypeID");

                    b.ToTable("EGS_SettlementType");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsStoreTransaction", b =>
                {
                    b.Property<int>("StoreTransactionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("IPAdress");

                    b.Property<int?>("InvoiceID");

                    b.Property<string>("PhoneEmail");

                    b.Property<int?>("ProductItemID");

                    b.Property<string>("RegistrationNumber");

                    b.Property<DateTime>("TransactionDate");

                    b.Property<int?>("TransactionMethodID");

                    b.Property<string>("TransactionReferenceNumber");

                    b.Property<int?>("TransactionTypeID");

                    b.HasKey("StoreTransactionID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("ProductItemID");

                    b.HasIndex("TransactionMethodID");

                    b.HasIndex("TransactionTypeID");

                    b.ToTable("EGS_StoreTransaction");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSubAgentWallet", b =>
                {
                    b.Property<int>("SubAgentWalletId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<int>("ClosingBalance");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsActive");

                    b.Property<int>("OpeningBalance");

                    b.Property<int?>("UserID");

                    b.Property<int?>("WalletID");

                    b.HasKey("SubAgentWalletId");

                    b.HasIndex("UserID");

                    b.HasIndex("WalletID");

                    b.ToTable("EGS_SubAgentWallet");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSubUser", b =>
                {
                    b.Property<int>("TerminalKey")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentID");

                    b.Property<string>("Agentemail");

                    b.Property<string>("AgentfirstName");

                    b.Property<string>("AgentlastName");

                    b.Property<string>("AgentphoneNumber");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUnprocessed");

                    b.Property<int>("IsLinkedID");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("SerialNumber");

                    b.Property<int>("SubUserID");

                    b.Property<string>("TerminalID");

                    b.Property<string>("TerminalType");

                    b.Property<int>("UserID");

                    b.HasKey("TerminalKey");

                    b.HasIndex("UserID");

                    b.ToTable("Egs_SubUser");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSubWallet", b =>
                {
                    b.Property<int>("subWalletID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<int>("ApprovedBy");

                    b.Property<string>("BankName");

                    b.Property<string>("BusinessAddress");

                    b.Property<string>("BusinessDescription");

                    b.Property<string>("BusinessName");

                    b.Property<double>("ClosingBalance");

                    b.Property<double>("CurrentBalance");

                    b.Property<DateTime>("DateApproved");

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsActive");

                    b.Property<string>("MainWallet");

                    b.Property<double>("OpeningBalance");

                    b.Property<string>("RCNumber");

                    b.Property<int>("WalletID");

                    b.HasKey("subWalletID");

                    b.HasIndex("WalletID");

                    b.ToTable("Egs_SubWallet");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsTerminal", b =>
                {
                    b.Property<int>("TerminalKey")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentTerminalID");

                    b.Property<int>("AggregatorID");

                    b.Property<string>("BatchNumber");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsActive");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("ParentTerminalKey");

                    b.Property<string>("SerialNumber");

                    b.Property<string>("Status");

                    b.Property<string>("TerminalID");

                    b.Property<string>("TerminalType");

                    b.Property<int?>("agentid");

                    b.HasKey("TerminalKey");

                    b.HasIndex("ParentTerminalKey");

                    b.ToTable("EGS_Terminal");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsTerminalTracking", b =>
                {
                    b.Property<int>("TrackingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<int>("AgentID");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<string>("TerminalID");

                    b.HasKey("TrackingID");

                    b.ToTable("EGS_TerminalTracking");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsTicketDetails", b =>
                {
                    b.Property<int>("TDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Feedback");

                    b.Property<int>("FeedbackBy");

                    b.Property<bool>("IsOfficial");

                    b.Property<int?>("TicketID");

                    b.HasKey("TDetailsID");

                    b.HasIndex("TicketID");

                    b.ToTable("EGS_TicketDetails");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsTickets", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<int>("ReceivedBy");

                    b.Property<string>("ReferenceNo");

                    b.Property<string>("Status");

                    b.Property<string>("Subject");

                    b.Property<int>("TreatedBy");

                    b.Property<int?>("WalletID");

                    b.HasKey("TicketID");

                    b.HasIndex("WalletID");

                    b.ToTable("EGS_Tickets");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsTokenValidation", b =>
                {
                    b.Property<int>("TokenID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Provider");

                    b.Property<string>("Token");

                    b.Property<DateTime>("ValidCreated");

                    b.Property<DateTime>("ValidExpired");

                    b.HasKey("TokenID");

                    b.ToTable("EGS_TokenValidation");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsTransactionMethod", b =>
                {
                    b.Property<int>("TransactionMethodID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("TransactionMethod");

                    b.HasKey("TransactionMethodID");

                    b.ToTable("EGS_TransactionMethod");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsUpgradeAccount", b =>
                {
                    b.Property<int>("UpgradeAccountID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateProcessed");

                    b.Property<DateTime>("DateRejected");

                    b.Property<bool>("IsProcessed");

                    b.Property<int>("ProcessedBy");

                    b.Property<int>("RejectedBy");

                    b.Property<int>("RoleRequestID");

                    b.Property<int?>("UserID");

                    b.Property<int>("UserTypeRequestID");

                    b.HasKey("UpgradeAccountID");

                    b.HasIndex("UserID");

                    b.ToTable("EGS_UpgradeAccount");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsUserDevice", b =>
                {
                    b.Property<int>("UserDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovedBy");

                    b.Property<DateTime>("DateApproved");

                    b.Property<DateTime>("DateEmailSent");

                    b.Property<DateTime>("DateRegistered");

                    b.Property<string>("DeviceName");

                    b.Property<string>("DeviceType");

                    b.Property<string>("IPAddress");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsApproved");

                    b.Property<bool>("IsEmailSent");

                    b.Property<string>("RequestID");

                    b.Property<string>("TerminalID");

                    b.Property<string>("UserAgent");

                    b.Property<int>("UserId");

                    b.HasKey("UserDeviceId");

                    b.ToTable("EGS_UserDevice");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsUserNotification", b =>
                {
                    b.Property<int>("UserNotificationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("IsCommission");

                    b.Property<bool>("IsDeposit");

                    b.Property<bool>("IsMoved");

                    b.Property<bool>("IsWithdrawal");

                    b.Property<string>("Service");

                    b.Property<int>("UserID");

                    b.HasKey("UserNotificationID");

                    b.ToTable("EGS_UserNotification");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsUserToken", b =>
                {
                    b.Property<int>("UserTokenID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthFactor");

                    b.Property<string>("MainWallet");

                    b.Property<string>("Pin");

                    b.Property<int>("UserID");

                    b.HasKey("UserTokenID");

                    b.ToTable("EGS_UserToken");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsUssdTransactions", b =>
                {
                    b.Property<int>("ussdTransactionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("agentID");

                    b.Property<double>("amount");

                    b.Property<string>("providerReference");

                    b.Property<string>("reference");

                    b.Property<string>("request");

                    b.Property<string>("response");

                    b.Property<string>("status");

                    b.Property<string>("statusDescription");

                    b.Property<string>("transactionID");

                    b.Property<string>("ussdString");

                    b.Property<string>("vendor");

                    b.HasKey("ussdTransactionID");

                    b.ToTable("EGS_UssdTransactions");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsVASProviderChannels", b =>
                {
                    b.Property<int>("ProviderChannelID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApiKey");

                    b.Property<double>("Cap");

                    b.Property<double>("Commission");

                    b.Property<int>("Createdby");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Logo");

                    b.Property<int>("Modifiedby");

                    b.Property<string>("Notification");

                    b.Property<int>("Priority");

                    b.Property<string>("ServiceCategory");

                    b.Property<string>("ServiceDetails");

                    b.Property<string>("ServiceProvider");

                    b.Property<string>("Verification");

                    b.HasKey("ProviderChannelID");

                    b.ToTable("EGS_VASProviderChannels");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsVendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("APIKey");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Password");

                    b.Property<string>("RCNumber");

                    b.Property<string>("Username");

                    b.Property<string>("VendorCode");

                    b.Property<string>("VendorName");

                    b.HasKey("VendorID");

                    b.ToTable("EGS_Vendor");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsWallet", b =>
                {
                    b.Property<int>("WalletID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BVN");

                    b.Property<double>("ClosingBalance");

                    b.Property<DateTime>("ClosingBalanceDate");

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsActive");

                    b.Property<double>("OpeningBalance");

                    b.Property<DateTime>("OpeningBalanceDate");

                    b.Property<int?>("UserID");

                    b.Property<string>("WalletAccountNumber");

                    b.Property<double>("WalletBalance");

                    b.Property<string>("WalletCredentials");

                    b.HasKey("WalletID");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("EGS_Wallet");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsWalletTransaction", b =>
                {
                    b.Property<int>("WalletTransactionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int?>("BillerID");

                    b.Property<int>("CreatedBy");

                    b.Property<double>("Current");

                    b.Property<DateTime>("DatePushed");

                    b.Property<DateTime>("DateSettled");

                    b.Property<string>("IPAddress");

                    b.Property<int?>("InvoiceID");

                    b.Property<int>("IsCompleted");

                    b.Property<bool>("IsPushed");

                    b.Property<bool>("IsSettled");

                    b.Property<string>("MainAccountNumber");

                    b.Property<string>("Narration");

                    b.Property<string>("PayItemRef");

                    b.Property<double>("Previous");

                    b.Property<int?>("ProductItemID");

                    b.Property<string>("ReceiverAccount");

                    b.Property<string>("ReceiverBank");

                    b.Property<string>("ReceiverName");

                    b.Property<string>("SessionID");

                    b.Property<double>("SurCharge");

                    b.Property<int?>("TerminalKey");

                    b.Property<string>("TransactionClientType");

                    b.Property<DateTime>("TransactionDate");

                    b.Property<int?>("TransactionID");

                    b.Property<int?>("TransactionMethodID");

                    b.Property<string>("TransactionReferenceNo");

                    b.Property<string>("TransactionStatus");

                    b.Property<int?>("TransactionTypeID");

                    b.Property<int?>("WalletID");

                    b.Property<string>("WalletReferenceNumber");

                    b.HasKey("WalletTransactionID");

                    b.HasIndex("BillerID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("ProductItemID");

                    b.HasIndex("TerminalKey");

                    b.HasIndex("TransactionID")
                        .IsUnique()
                        .HasFilter("[TransactionID] IS NOT NULL");

                    b.HasIndex("TransactionMethodID");

                    b.HasIndex("TransactionTypeID");

                    b.HasIndex("WalletID");

                    b.ToTable("EGS_WalletTransaction");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsWebhooklogs", b =>
                {
                    b.Property<int>("webHooklogsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DateModified");

                    b.Property<string>("payload");

                    b.Property<string>("provider");

                    b.Property<string>("service");

                    b.HasKey("webHooklogsID");

                    b.ToTable("EGS_Webhooklogs");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.FundWallet", b =>
                {
                    b.Property<int>("FundWalletID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int?>("UserID");

                    b.Property<int?>("WalletID");

                    b.HasKey("FundWalletID");

                    b.HasIndex("UserID");

                    b.HasIndex("WalletID");

                    b.ToTable("FundWallets");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysAgentMapping", b =>
                {
                    b.Property<int>("AgentMappingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentID");

                    b.Property<int>("AggregatorID");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.HasKey("AgentMappingID");

                    b.HasIndex("AggregatorID");

                    b.ToTable("SYS_AgentMapping");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysAgentType", b =>
                {
                    b.Property<int>("AgentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CapAtValue");

                    b.Property<double>("Commission");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("ServiceDetails");

                    b.Property<int>("TransactionMethodID");

                    b.Property<string>("TypeName");

                    b.Property<int?>("UserID");

                    b.HasKey("AgentTypeID");

                    b.HasIndex("TransactionMethodID");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("SYS_AgentType");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysAggregator", b =>
                {
                    b.Property<int>("AggregatorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo");

                    b.Property<string>("Address");

                    b.Property<string>("AggregatorCode");

                    b.Property<string>("AggregatorName");

                    b.Property<int>("AggregatorType");

                    b.Property<int>("AggregatorTypeID");

                    b.Property<int?>("BankID");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsActive");

                    b.Property<string>("KYC");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("UserID");

                    b.HasKey("AggregatorID");

                    b.HasIndex("BankID");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("SYS_Aggregator");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysAggregatorType", b =>
                {
                    b.Property<int>("AggregatorTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AggregatorID");

                    b.Property<double>("CapAtValue");

                    b.Property<double>("Commission");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("ServiceDetails");

                    b.Property<int>("TransactionMethodID");

                    b.Property<string>("TypeName");

                    b.HasKey("AggregatorTypeID");

                    b.HasIndex("AggregatorID");

                    b.HasIndex("TransactionMethodID");

                    b.ToTable("SYS_AggregatorType");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysBank", b =>
                {
                    b.Property<int>("BankID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankCode");

                    b.Property<string>("BankName");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Provider");

                    b.HasKey("BankID");

                    b.ToTable("SYS_Bank");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysBillers", b =>
                {
                    b.Property<int>("BillerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillerName");

                    b.Property<double>("Commission");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Services");

                    b.HasKey("BillerID");

                    b.ToTable("SYS_Billers");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysCompany", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyAddress");

                    b.Property<string>("CompanyName");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int?>("GLAccountID");

                    b.Property<bool>("IsActive");

                    b.HasKey("CompanyID");

                    b.HasIndex("GLAccountID")
                        .IsUnique()
                        .HasFilter("[GLAccountID] IS NOT NULL");

                    b.ToTable("SYS_Company");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysDocument", b =>
                {
                    b.Property<int>("DocumentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DocumentName");

                    b.Property<string>("DocumentType");

                    b.Property<int?>("RoleID");

                    b.HasKey("DocumentID");

                    b.HasIndex("RoleID");

                    b.ToTable("SYS_Document");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysIdentificationType", b =>
                {
                    b.Property<int>("IdentificationTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("IdentificationTypeName");

                    b.HasKey("IdentificationTypeID");

                    b.ToTable("SYS_IdentificationType");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysLga", b =>
                {
                    b.Property<int>("LgaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("LgaName");

                    b.HasKey("LgaID");

                    b.ToTable("SYS_LGA");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysMerchantMapping", b =>
                {
                    b.Property<int>("MerchantMappingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int?>("MerchantID");

                    b.Property<int>("SubMerchantID");

                    b.HasKey("MerchantMappingID");

                    b.HasIndex("MerchantID");

                    b.ToTable("SYS_MerchantMapping");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysRequestResponseLog", b =>
                {
                    b.Property<int>("RequestResponseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Message");

                    b.Property<string>("Provider");

                    b.Property<string>("Request");

                    b.Property<string>("Response");

                    b.Property<string>("StatusCode");

                    b.Property<string>("TransactionType");

                    b.HasKey("RequestResponseID");

                    b.ToTable("SYS_RequestResponseLog");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysRole", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<bool>("IsActive");

                    b.Property<string>("RoleName");

                    b.HasKey("RoleID");

                    b.ToTable("SYS_Role");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysServiceNotification", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description");

                    b.Property<int>("ModifiedBy");

                    b.Property<bool>("Status");

                    b.Property<int?>("UserID");

                    b.HasKey("ServiceID");

                    b.HasIndex("UserID");

                    b.ToTable("SYS_ServiceNotification");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysState", b =>
                {
                    b.Property<int>("StateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("StateCode");

                    b.Property<string>("StateName");

                    b.HasKey("StateID");

                    b.ToTable("SYS_States");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysTarget", b =>
                {
                    b.Property<int>("TargetID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<double>("TargetAmount");

                    b.Property<string>("TargetName");

                    b.Property<DateTime>("TargetPeriodFrom");

                    b.Property<DateTime>("TargetPeriodTo");

                    b.Property<int?>("TransactionMethodID");

                    b.HasKey("TargetID");

                    b.HasIndex("TransactionMethodID");

                    b.ToTable("SYS_Target");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysTitle", b =>
                {
                    b.Property<int>("TitleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("TitleName");

                    b.HasKey("TitleID");

                    b.ToTable("SYS_Title");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysTransactionLimit", b =>
                {
                    b.Property<int>("TransactionLimitID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<double>("TransactionBalance");

                    b.Property<double>("TransactionLimit");

                    b.Property<string>("TransactionLimitName");

                    b.HasKey("TransactionLimitID");

                    b.ToTable("SYS_TransactionLimits");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysTransactionType", b =>
                {
                    b.Property<int>("TransactionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("TransactionType");

                    b.HasKey("TransactionTypeID");

                    b.ToTable("SYS_TransactionType");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysUserContactInfo", b =>
                {
                    b.Property<int>("UserContactInfoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("LgaID");

                    b.Property<string>("MobileNumber");

                    b.Property<string>("PostalCode");

                    b.Property<int>("StateID");

                    b.Property<string>("UserAddress");

                    b.Property<int>("UserID");

                    b.HasKey("UserContactInfoID");

                    b.ToTable("SYS_UserContactInfo");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysUserKycInfo", b =>
                {
                    b.Property<int>("UserKYCID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccount");

                    b.Property<int?>("BankID");

                    b.Property<int>("Createdby");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int?>("IdentificationTypeID");

                    b.Property<string>("IdentificationValue");

                    b.HasKey("UserKYCID");

                    b.HasIndex("BankID");

                    b.HasIndex("IdentificationTypeID");

                    b.ToTable("SYS_UserKYCInfo");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysUserType", b =>
                {
                    b.Property<int>("UserTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<double>("DailyLimit");

                    b.Property<DateTime>("DateCreated");

                    b.Property<double>("TransactionLimit");

                    b.Property<string>("UserType");

                    b.HasKey("UserTypeID");

                    b.ToTable("SYS_UserType");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysUsers", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountTypeID");

                    b.Property<string>("ActivationCode");

                    b.Property<string>("ActivationStatus");

                    b.Property<string>("Address");

                    b.Property<string>("AgentCode");

                    b.Property<int?>("AgentTypeID");

                    b.Property<int?>("AggregatorID");

                    b.Property<int>("ApprovedBy");

                    b.Property<int>("ApprovedBy2");

                    b.Property<string>("BVN");

                    b.Property<string>("BankAccountCode");

                    b.Property<string>("BusinessAddress");

                    b.Property<string>("BusinessName");

                    b.Property<string>("CompanyName");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("Image");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsSignUp");

                    b.Property<bool>("IsSpecial");

                    b.Property<bool>("IsVerified");

                    b.Property<bool>("Is_Approved");

                    b.Property<bool>("Is_UseFingerprint");

                    b.Property<int?>("KYCID");

                    b.Property<DateTime>("LastLoginDate");

                    b.Property<string>("LastName");

                    b.Property<int?>("LgaID");

                    b.Property<int?>("MerchantID");

                    b.Property<string>("MiddleName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("RCNumber");

                    b.Property<int?>("RoleID");

                    b.Property<int?>("StateID");

                    b.Property<string>("TerminalID");

                    b.Property<int?>("TerminalKey");

                    b.Property<int?>("TitleID");

                    b.Property<int?>("TransactionLimitID");

                    b.Property<int?>("UserContactInfoID");

                    b.Property<int?>("UserTypeID");

                    b.Property<int?>("WalletID");

                    b.HasKey("UserID");

                    b.HasIndex("AccountTypeID");

                    b.HasIndex("AgentTypeID");

                    b.HasIndex("AggregatorID");

                    b.HasIndex("LgaID");

                    b.HasIndex("MerchantID");

                    b.HasIndex("RoleID");

                    b.HasIndex("StateID");

                    b.HasIndex("TerminalKey");

                    b.HasIndex("TitleID");

                    b.HasIndex("TransactionLimitID");

                    b.HasIndex("UserTypeID");

                    b.HasIndex("WalletID");

                    b.ToTable("SYS_Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaymentGateway21052021.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.ApplicationRole", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAccountType", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAccountsInfo", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysBank", "Bank")
                        .WithMany("AccountsInfos")
                        .HasForeignKey("BankID");

                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsAggregatorRequest", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysAggregator", "Aggregator")
                        .WithMany("AggregatorRequests")
                        .HasForeignKey("AggregatorID");

                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "Agent")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsBeneficiary", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysBank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsCardHolder", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsWallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsDocumentValue", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysDocument", "Document")
                        .WithMany("DocumentValues")
                        .HasForeignKey("DocumentID");

                    b.HasOne("PaymentGateway21052021.Models.SysUserKycInfo", "KycInfo")
                        .WithMany("DocumentValues")
                        .HasForeignKey("UserKYCID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsEgoleWalletTransactions", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysBank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankID");

                    b.HasOne("PaymentGateway21052021.Models.EgsTransactionMethod", "TransactionMethod")
                        .WithMany()
                        .HasForeignKey("TransactionMethodID");

                    b.HasOne("PaymentGateway21052021.Models.SysTransactionType", "TransactionType")
                        .WithMany("EgoleWalletTransactions")
                        .HasForeignKey("TransactionTypeID");

                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("PaymentGateway21052021.Models.EgsWallet", "Wallet")
                        .WithMany("EgoleWalletTransactions")
                        .HasForeignKey("WalletID");

                    b.HasOne("PaymentGateway21052021.Models.EgsWalletTransaction", "WalletTransaction")
                        .WithMany()
                        .HasForeignKey("WalletTransactionID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsGLAccount", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysBank", "Bank")
                        .WithMany("Banks")
                        .HasForeignKey("BankID");

                    b.HasOne("PaymentGateway21052021.Models.SysCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsInvoice", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysBank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankID");

                    b.HasOne("PaymentGateway21052021.Models.EgsProduct", "Product")
                        .WithMany("Invoices")
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsMerchant", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysBank", "Bank")
                        .WithMany("Merchants")
                        .HasForeignKey("BankID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsPosRequest", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsPosType", "PosType")
                        .WithMany()
                        .HasForeignKey("PosTypeID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsProduct", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsMerchant", "Merchant")
                        .WithMany("Products")
                        .HasForeignKey("MerchantID");

                    b.HasOne("PaymentGateway21052021.Models.EgsProductCategory", "ProductCategories")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsProductItem", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsProduct", "Product")
                        .WithMany("ProductItems")
                        .HasForeignKey("ProductID");

                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "Merchant")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsProductItemRate", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID");

                    b.HasOne("PaymentGateway21052021.Models.EgsProductItem", "ProductItem")
                        .WithMany("ProductItemRates")
                        .HasForeignKey("ProductItemID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSales", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsProduct", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductID");

                    b.HasOne("PaymentGateway21052021.Models.EgsProductItem", "ProductItem")
                        .WithMany("Sales")
                        .HasForeignKey("ProductItemID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSettlementLog", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysBank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankID");

                    b.HasOne("PaymentGateway21052021.Models.EgsMerchant", "Merchant")
                        .WithMany("SettlementLogs")
                        .HasForeignKey("MerchantID");

                    b.HasOne("PaymentGateway21052021.Models.EgsProduct", "Product")
                        .WithMany("SettlementLogs")
                        .HasForeignKey("ProductID");

                    b.HasOne("PaymentGateway21052021.Models.EgsProductItem", "ProductItem")
                        .WithMany("SettlementLogs")
                        .HasForeignKey("ProductItemID");

                    b.HasOne("PaymentGateway21052021.Models.EgsSettlementMode", "SettlementMode")
                        .WithMany("SettlementLogs")
                        .HasForeignKey("SettlementModeID");

                    b.HasOne("PaymentGateway21052021.Models.EgsSettlementType", "SettlementType")
                        .WithMany("SettlementLogs")
                        .HasForeignKey("SettlementTypeID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSettlementSummary", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysBank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankID");

                    b.HasOne("PaymentGateway21052021.Models.EgsMerchant", "Merchant")
                        .WithMany("SettlementSummarys")
                        .HasForeignKey("MerchantID");

                    b.HasOne("PaymentGateway21052021.Models.EgsProduct", "Product")
                        .WithMany("SettlementSummarys")
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsStoreTransaction", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsInvoice", "Invoices")
                        .WithMany("StoreTransactions")
                        .HasForeignKey("InvoiceID");

                    b.HasOne("PaymentGateway21052021.Models.EgsProductItem", "ProductItem")
                        .WithMany("StoreTransactions")
                        .HasForeignKey("ProductItemID");

                    b.HasOne("PaymentGateway21052021.Models.EgsTransactionMethod", "TransactionMethod")
                        .WithMany()
                        .HasForeignKey("TransactionMethodID");

                    b.HasOne("PaymentGateway21052021.Models.SysTransactionType", "TransactionType")
                        .WithMany("StroreTransactions")
                        .HasForeignKey("TransactionTypeID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSubAgentWallet", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("PaymentGateway21052021.Models.EgsWallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSubUser", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsSubWallet", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsWallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsTerminal", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsParentTerminal", "ParentTerminal")
                        .WithMany()
                        .HasForeignKey("ParentTerminalKey");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsTicketDetails", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsTickets", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsTickets", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsWallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsUpgradeAccount", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsWallet", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "User")
                        .WithOne()
                        .HasForeignKey("PaymentGateway21052021.Models.EgsWallet", "UserID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.EgsWalletTransaction", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysBillers", "Billers")
                        .WithMany()
                        .HasForeignKey("BillerID");

                    b.HasOne("PaymentGateway21052021.Models.EgsInvoice", "Invoices")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("InvoiceID");

                    b.HasOne("PaymentGateway21052021.Models.EgsProductItem", "ProductItem")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("ProductItemID");

                    b.HasOne("PaymentGateway21052021.Models.EgsTerminal", "Terminals")
                        .WithMany()
                        .HasForeignKey("TerminalKey");

                    b.HasOne("PaymentGateway21052021.Models.EgsEgoleWalletTransactions", "EgoleWalletTransaction")
                        .WithOne()
                        .HasForeignKey("PaymentGateway21052021.Models.EgsWalletTransaction", "TransactionID");

                    b.HasOne("PaymentGateway21052021.Models.EgsTransactionMethod", "TransactionMethod")
                        .WithMany()
                        .HasForeignKey("TransactionMethodID");

                    b.HasOne("PaymentGateway21052021.Models.SysTransactionType", "TransactionType")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("TransactionTypeID");

                    b.HasOne("PaymentGateway21052021.Models.EgsWallet", "Wallet")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("WalletID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.FundWallet", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "Users")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("PaymentGateway21052021.Models.EgsWallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysAgentMapping", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysAggregator", "Aggregator")
                        .WithMany("AgentMappings")
                        .HasForeignKey("AggregatorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysAgentType", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsTransactionMethod", "Services")
                        .WithMany()
                        .HasForeignKey("TransactionMethodID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "User")
                        .WithOne()
                        .HasForeignKey("PaymentGateway21052021.Models.SysAgentType", "UserID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysAggregator", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysBank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankID");

                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "User")
                        .WithOne()
                        .HasForeignKey("PaymentGateway21052021.Models.SysAggregator", "UserID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysAggregatorType", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysAggregator", "Aggregator")
                        .WithMany()
                        .HasForeignKey("AggregatorID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaymentGateway21052021.Models.EgsTransactionMethod", "Services")
                        .WithMany()
                        .HasForeignKey("TransactionMethodID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysCompany", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsGLAccount", "GLAAccount")
                        .WithOne()
                        .HasForeignKey("PaymentGateway21052021.Models.SysCompany", "GLAccountID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysDocument", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysRole", "Role")
                        .WithMany("Documents")
                        .HasForeignKey("RoleID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysMerchantMapping", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsMerchant", "Merchant")
                        .WithMany()
                        .HasForeignKey("MerchantID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysServiceNotification", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysUsers", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysTarget", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsTransactionMethod", "Services")
                        .WithMany()
                        .HasForeignKey("TransactionMethodID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysUserKycInfo", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.SysBank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankID");

                    b.HasOne("PaymentGateway21052021.Models.SysIdentificationType", "IdentificationType")
                        .WithMany("UserKYCInfos")
                        .HasForeignKey("IdentificationTypeID");
                });

            modelBuilder.Entity("PaymentGateway21052021.Models.SysUsers", b =>
                {
                    b.HasOne("PaymentGateway21052021.Models.EgsAccountType", "AccountType")
                        .WithMany("Users")
                        .HasForeignKey("AccountTypeID");

                    b.HasOne("PaymentGateway21052021.Models.SysAgentType", "AgentType")
                        .WithMany()
                        .HasForeignKey("AgentTypeID");

                    b.HasOne("PaymentGateway21052021.Models.SysAggregator", "Aggregator")
                        .WithMany()
                        .HasForeignKey("AggregatorID");

                    b.HasOne("PaymentGateway21052021.Models.SysLga", "Lga")
                        .WithMany("Users")
                        .HasForeignKey("LgaID");

                    b.HasOne("PaymentGateway21052021.Models.EgsMerchant", "Merchant")
                        .WithMany("Users")
                        .HasForeignKey("MerchantID");

                    b.HasOne("PaymentGateway21052021.Models.SysRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID");

                    b.HasOne("PaymentGateway21052021.Models.SysState", "ResidentialState")
                        .WithMany("Users")
                        .HasForeignKey("StateID");

                    b.HasOne("PaymentGateway21052021.Models.EgsTerminal", "Terminals")
                        .WithMany()
                        .HasForeignKey("TerminalKey");

                    b.HasOne("PaymentGateway21052021.Models.SysTitle", "Title")
                        .WithMany("Users")
                        .HasForeignKey("TitleID");

                    b.HasOne("PaymentGateway21052021.Models.SysTransactionLimit", "TransactionLimit")
                        .WithMany("Users")
                        .HasForeignKey("TransactionLimitID");

                    b.HasOne("PaymentGateway21052021.Models.SysUserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeID");

                    b.HasOne("PaymentGateway21052021.Models.EgsWallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletID");
                });
#pragma warning restore 612, 618
        }
    }
}

@using Microsoft.AspNetCore.Identity
@using PaymentGateway21052021.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


@{
    var user = await UserManager.GetUserAsync(User);
    var user2 = await _unitOfWork.User.GetSysUsers(user.UserID.ToString());
    var userRoles = (List<string>)await UserManager.GetRolesAsync(user);
    string roles = "";

    if (userRoles.Count > 0)
    {
        for (var i = 0; i < userRoles.Count; i++)
        {
            var last = i + 1;
            if (last == userRoles.Count)
            {
                roles += userRoles[i];
            }
            else
            {
                roles += userRoles[i] + " | ";
            }
        }
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
